if (UNIX)
 find_path (TINY_OBJ_LOADER_HEADER tiny_obj_loader.h
            PATHS $ENV{LIB_ROOT}
            PATH_SUFFIXES tinyobjloader
            DOC "searching for tiny_obj_loader")
 if (NOT TINY_OBJ_LOADER_HEADER)
  message (WARNING "could not find tiny_obj_loader, continuing")
 else ()
  message (STATUS "Found tiny_obj_loader \"${TINY_OBJ_LOADER_HEADER}\"")
  set (TINY_OBJ_LOADER_FOUND TRUE)
  set (TINY_OBJ_LOADER_INCLUDE_DIRS "$ENV{LIB_ROOT}/tinyobjloader")
 endif (NOT TINY_OBJ_LOADER_HEADER)
elseif (WIN32)
 if (VCPKG_USE)
#  cmake_policy (SET CMP0074 OLD)
  find_package (tiny_obj_loader)
  if (TINY_OBJ_LOADER_FOUND)
   message (STATUS "found tiny_obj_loader")
   set (TINY_OBJ_LOADER_FOUND TRUE)
   set (TINY_OBJ_LOADER_INCLUDE_DIRS ${VCPKG_INCLUDE_DIR})
  endif (TINY_OBJ_LOADER_FOUND)
 endif (VCPKG_USE)
 if (NOT TINY_OBJ_LOADER_FOUND)
  find_path (TINY_OBJ_LOADER_HEADER tiny_obj_loader.h
             PATHS $ENV{LIB_ROOT}
             PATH_SUFFIXES tinyobjloader
             DOC "searching for tiny_obj_loader")
  if (NOT TINY_OBJ_LOADER_HEADER)
   message (WARNING "could not find tiny_obj_loader, continuing")
  else ()
   message (STATUS "Found tiny_obj_loader \"${TINY_OBJ_LOADER_HEADER}\"")
   set (TINY_OBJ_LOADER_FOUND TRUE)
   set (TINY_OBJ_LOADER_INCLUDE_DIRS "$ENV{LIB_ROOT}/tinyobjloader")
  endif (NOT TINY_OBJ_LOADER_HEADER)
 endif (NOT TINY_OBJ_LOADER_FOUND)
endif ()
if (TINY_OBJ_LOADER_FOUND)
 option (TINY_OBJ_LOADER_SUPPORT "enable tiny_obj_loader support" ON)
 if (TINY_OBJ_LOADER_SUPPORT)
  add_definitions (-DTINY_OBJ_LOADER_SUPPORT)
 endif (TINY_OBJ_LOADER_SUPPORT)
endif (TINY_OBJ_LOADER_FOUND)
