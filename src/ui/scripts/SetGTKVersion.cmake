if (GTK_SUPPORT AND GTK_USE)
 # *NOTE*: the first entry is the default option
 if (UNIX)
  set (GTK_VERSION "gtk3" CACHE STRING "use GTK3 (default)")
  set (GTK_VERSION "gtk2" CACHE STRING "use GTK2")
  set_property (CACHE GTK_VERSION PROPERTY STRINGS "gtk3" "gtk2")
 elseif (WIN32)
  set (GTK_VERSION "gtk2" CACHE STRING "use GTK2 (default)")
  set (GTK_VERSION "gtk3" CACHE STRING "use GTK3")
  set_property (CACHE GTK_VERSION PROPERTY STRINGS "gtk2" "gtk3")
 endif ()

 if (NOT (DEFINED GTK_VERSION_LAST))
  set (GTK_VERSION_LAST "NotAVersion" CACHE STRING "last GTK version used")
  mark_as_advanced (FORCE GTK_VERSION_LAST)
 endif ()
 if (NOT (${GTK_VERSION} MATCHES ${GTK_VERSION_LAST}))
  unset (GTK2_USE CACHE)
  unset (GTK3_USE CACHE)
  set (GTK_VERSION_LAST ${GTK_VERSION} CACHE STRING "Updating GTK Version Option" FORCE)
 endif ()

 if (${GTK_VERSION} MATCHES "gtk2")
  if (NOT GTK2_SUPPORT)
   message (WARNING "GTK2 not supported, falling back")
   if (GTK3_SUPPORT)
    set (GTK3_USE ON CACHE STRING "use GTK3")
    mark_as_advanced (FORCE GTK3_USE)
    add_definitions (-DGTK3_USE)
    set (GTK_INCLUDE_DIRS ${GTK3_INCLUDE_DIRS})
    set (GTK_LIBRARIES ${GTK3_LIBRARIES})
   else ()
    message (FATAL_ERROR "GTK3 not supported, aborting")
   endif (GTK3_SUPPORT)
  else ()
   message (STATUS "using gtk2")
   set (GTK2_USE ON CACHE STRING "use GTK2")
   mark_as_advanced (FORCE GTK2_USE)
   add_definitions (-DGTK2_USE)
#   message (STATUS "GTK2_INCLUDE_DIRS: ${GTK2_INCLUDE_DIRS}")
   set (GTK_INCLUDE_DIRS ${GTK2_INCLUDE_DIRS})
   set (GTK_LIBRARIES ${GTK2_LIBRARIES})
  endif (NOT GTK2_SUPPORT)
 elseif (${GTK_VERSION} MATCHES "gtk3")
  if (NOT GTK3_SUPPORT)
   message (WARNING "GTK3 not supported, falling back")
   if (GTK2_SUPPORT)
    set (GTK2_USE ON CACHE STRING "use GTK2")
    mark_as_advanced (FORCE GTK2_USE)
    add_definitions (-DGTK2_USE)
    set (GTK_INCLUDE_DIRS ${GTK2_INCLUDE_DIRS})
    set (GTK_LIBRARIES ${GTK2_LIBRARIES})
   else ()
    message (FATAL_ERROR "GTK2 not supported, aborting")
   endif (GTK2_SUPPORT)
  else ()
   message (STATUS "using gtk3")
   set (GTK3_USE ON CACHE STRING "use GTK3")
   mark_as_advanced (FORCE GTK3_USE)
   add_definitions (-DGTK3_USE)
#   message (STATUS "GTK3_INCLUDE_DIRS: ${GTK3_INCLUDE_DIRS}")
   set (GTK_INCLUDE_DIRS ${GTK3_INCLUDE_DIRS})
   set (GTK_LIBRARIES ${GTK3_LIBRARIES})
  endif (NOT GTK3_SUPPORT)
 else ()
  message (FATAL_ERROR "invalid/unknown GTK version, aborting")
 endif ()

 if (LIBGLADE_SUPPORT)
  set (GTK_INCLUDE_DIRS "${GTK_INCLUDE_DIRS};${LIBGLADE_INCLUDES}")
  set (GTK_LIBRARIES "${GTK_LIBRARIES};${LIBGLADE_LIBRARY}")
 endif (LIBGLADE_SUPPORT)
 if (GTKGLAREA_SUPPORT)
  set (GTK_INCLUDE_DIRS "${GTK_INCLUDE_DIRS};${GTKGLAREA_INCLUDES}")
  set (GTK_LIBRARIES "${GTK_LIBRARIES};${GTKGLAREA_LIBRARY}")
 endif (GTKGLAREA_SUPPORT)
endif (GTK_SUPPORT AND GTK_USE)

# *NOTE*: unify include dirs and libraries; includers use GTK_INCLUDE_DIRS and GTK_LIBRARIES
# *NOTE*: if no ui has been selected, but gtk is supported, prefer gtk2 over gtk3
if (GTK_SUPPORT AND NOT GTK3_USE AND NOT GTK2_USE)
 message (WARNING "GTK version not selected, preferring GTK2 over GTK3")
 if (GTK2_SUPPORT)
  set (GTK_INCLUDE_DIRS ${GTK2_INCLUDE_DIRS})
  set (GTK_LIBRARIES ${GTK2_LIBRARIES})
  if (LIBGLADE_SUPPORT)
   set (GTK_INCLUDE_DIRS "${GTK_INCLUDE_DIRS};${LIBGLADE_INCLUDES}")
   set (GTK_LIBRARIES "${GTK_LIBRARIES};${LIBGLADE_LIBRARY}")
  endif (LIBGLADE_SUPPORT)
  if (GTKGLAREA_SUPPORT)
   set (GTK_INCLUDE_DIRS "${GTK_INCLUDE_DIRS};${GTKGLAREA_INCLUDES}")
   set (GTK_LIBRARIES "${GTK_LIBRARIES};${GTKGLAREA_LIBRARY}")
  endif (GTKGLAREA_SUPPORT)
 elseif (GTK3_SUPPORT)
  set (GTK_INCLUDE_DIRS ${GTK3_INCLUDE_DIRS})
  set (GTK_LIBRARIES ${GTK3_LIBRARIES})
 endif ()
endif (GTK_SUPPORT AND NOT GTK3_USE AND NOT GTK2_USE)
#message (STATUS "GTK_INCLUDE_DIRS: ${GTK_INCLUDE_DIRS}")
#message (STATUS "GTK_LIBRARIES: ${GTK_LIBRARIES}")
