if (GTK_SUPPORT AND GTK_USE)
 # *NOTE*: the first entry is the default option
 set (GTK_VERSION "gtk2" CACHE STRING "use GTK2 (default)")
 set (GTK_VERSION "gtk3" CACHE STRING "use GTK3")

 set_property (CACHE GTK_VERSION PROPERTY STRINGS "gtk2" "gtk3")

 if (NOT (DEFINED GTK_VERSION_LAST))
  set (GTK_VERSION_LAST "NotAVersion" CACHE STRING "last GTK version used")
  mark_as_advanced (FORCE GTK_VERSION_LAST)
 endif ()
 if (NOT (${GTK_VERSION} MATCHES ${GTK_VERSION_LAST}))
  unset (GTK2_USE CACHE)
  unset (GTK3_USE CACHE)
  set (GTK_VERSION_LAST ${GTK_VERSION} CACHE STRING "Updating GTK Version Option" FORCE)
 endif ()

 if (${GTK_VERSION} MATCHES "gtk2")
  if (NOT GTK2_SUPPORT)
   message (WARNING "GTK2 not supported, falling back")
   if (GTK3_SUPPORT)
    set (GTK3_USE ON CACHE STRING "use GTK3")
    mark_as_advanced (FORCE GTK3_USE)
    add_definitions (-DGTK3_USE)
   endif (GTK3_SUPPORT)
  else ()
   set (GTK2_USE ON CACHE STRING "use GTK2")
   mark_as_advanced (FORCE GTK2_USE)
   add_definitions (-DGTK2_USE)
  endif (NOT GTK2_SUPPORT)
 elseif (${GTK_VERSION} MATCHES "gtk3")
  if (NOT GTK3_SUPPORT)
   message (WARNING "GTK3 not supported, falling back")
   if (GTK2_SUPPORT)
    set (GTK2_USE ON CACHE STRING "use GTK2")
    mark_as_advanced (FORCE GTK2_USE)
    add_definitions (-DGTK2_USE)
   endif (GTK2_SUPPORT)
  else ()
   set (GTK3_USE ON CACHE STRING "use GTK3")
   mark_as_advanced (FORCE GTK3_USE)
   add_definitions (-DGTK3_USE)
  endif (NOT GTK3_SUPPORT)
 else ()
  message (FATAL_ERROR "invalid/unknown GTK version, aborting")
 endif ()
endif (GTK_SUPPORT AND GTK_USE)

