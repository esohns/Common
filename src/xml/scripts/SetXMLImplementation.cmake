# *NOTE*: the first entry is the default option
if (UNIX)
 set (XML_IMPLEMENTATION "libxml2" CACHE STRING "use libxml2 (default)")

 set_property (CACHE XML_IMPLEMENTATION PROPERTY STRINGS "libxml2")
elseif (WIN32)
 set (XML_IMPLEMENTATION "msxml" CACHE STRING "use msxml (default)")
 set (XML_IMPLEMENTATION "libxml2" CACHE STRING "use libxml2")

 set_property (CACHE XML_IMPLEMENTATION PROPERTY STRINGS "msxml" "libxml2")
endif ()

if (NOT (DEFINED XML_IMPLEMENTATION_LAST))
 set (XML_IMPLEMENTATION_LAST "NotAnImplementation" CACHE STRING "last XML implementation used")
 mark_as_advanced (FORCE XML_IMPLEMENTATION_LAST)
endif ()
if (NOT (${XML_IMPLEMENTATION} MATCHES ${XML_IMPLEMENTATION_LAST}))
 if (UNIX)
  unset (LIBXML2_USE CACHE)
 elseif (WIN32)
  unset (MSXML_USE CACHE)
  unset (LIBXML2_USE CACHE)
 endif ()
  set (XML_IMPLEMENTATION_LAST ${XML_IMPLEMENTATION} CACHE STRING "Updating XML Implementation Option" FORCE)
endif ()

if (UNIX)
 if (${XML_IMPLEMENTATION} MATCHES "libxml2")
  if (NOT LIBXML2_SUPPORT)
   message (FATAL_ERROR "libxml2 not supported")
  endif ()
  set (LIBXML2_USE ON CACHE STRING "use libxml2")
  mark_as_advanced (FORCE LIBXML2_USE)
  add_definitions (-DLIBXML2_USE)
 endif ()
elseif (WIN32)
 if (${XML_IMPLEMENTATION} MATCHES "msxml")
  if (NOT MSXML_SUPPORT)
   message (FATAL_ERROR "msxml not supported")
  endif ()
  set (MSXML_USE ON)
  mark_as_advanced (FORCE MSXML_USE)
  add_definitions (-DMSXML_USE)
 elseif (${XML_IMPLEMENTATION} MATCHES "libxml2")
  if (NOT LIBXML2_SUPPORT)
   message (FATAL_ERROR "libxml2 not supported")
  endif ()
  set (LIBXML2_USE ON CACHE STRING "use libxml2")
  mark_as_advanced (FORCE LIBXML2_USE)
  add_definitions (-DLIBXML2_USE)
 endif ()
endif ()
