set (OPENGL_SUPPORT_DEFAULT ON)
if (${CMAKE_VERSION} VERSION_GREATER "3.10")
 cmake_policy (SET CMP0072 OLD) # set OpenGL_GL_PREFERENCE to LEGACY|GLVND
endif (${CMAKE_VERSION} VERSION_GREATER "3.10")
include (FindOpenGL)
if (NOT OPENGL_FOUND)
 if (UNIX)
# set (OpenGL_Components "OpenGL EGL GLX")
  set (OpenGL_Components "OpenGL")
 elseif (WIN32)
  set (OpenGL_Components "OpenGL")
 endif ()
 find_package (OpenGL MODULE
               COMPONENTS ${OpenGL_Components})
 if (OpenGL_FOUND)
  message (STATUS "Found OpenGL package")
  set (OPENGL_FOUND TRUE)
 endif (OpenGL_FOUND)
 if (NOT OPENGL_FOUND)
  if (UNIX)
   set (OPENGL_LIB_FILE libGL.so)
  elseif (WIN32)
   set (OPENGL_LIB_FILE OpenGL32.lib)
  endif ()
  find_library (OPENGL_LIBRARY
                NAMES ${OPENGL_LIB_FILE}
#               PATHS /usr/lib64 /usr/lib/x86_64-linux-gnu
                DOC "searching for ${OPENGL_LIB_FILE}")
  if (NOT OPENGL_LIBRARY)
   message (FATAL_ERROR "could not find ${OPENGL_LIB_FILE} (was: \"${OPENGL_LIBRARY}\"), aborting")
  else ()
   message (STATUS "Found OpenGL library \"${OPENGL_LIBRARY}\"")
   set (OPENGL_FOUND TRUE)
  endif (NOT OPENGL_LIBRARY)
 endif (NOT OPENGL_FOUND)
endif (NOT OPENGL_FOUND)
if (OPENGL_FOUND)
 option (OPENGL_SUPPORT "enable OpenGL support" ${OPENGL_SUPPORT_DEFAULT})
 if (OPENGL_SUPPORT)
  add_definitions (-DOPENGL_SUPPORT)
 endif (OPENGL_SUPPORT)
endif (OPENGL_FOUND)
if (OPENGL_SUPPORT)
 option (OPENGL_USE "enable OpenGL" ${OPENGL_USE_DEFAULT})
 if (OPENGL_USE)
  add_definitions (-DOPENGL_USE)
 endif (OPENGL_USE)
endif (OPENGL_SUPPORT)
