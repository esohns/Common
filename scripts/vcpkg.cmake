if (WIN32)
 if (DEFINED ENV{VCPKG_INSTALLATION_ROOT})
  file (TO_CMAKE_PATH "$ENV{VCPKG_INSTALLATION_ROOT}" VCPKG_INSTALLATION_ROOT)
  message (STATUS "VCPKG_INSTALLATION_ROOT set to \"${VCPKG_INSTALLATION_ROOT}\"")
 else ()
  file (TO_CMAKE_PATH "$ENV{LIB_ROOT}/vcpkg" VCPKG_INSTALLATION_ROOT)
 endif (DEFINED ENV{VCPKG_INSTALLATION_ROOT})
 if (EXISTS ${VCPKG_INSTALLATION_ROOT})
  set (VCPKG_SCRIPT "${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake")
  if (EXISTS ${VCPKG_SCRIPT})
   set (VCPKG_SUPPORT ON)
  else ()
   message (WARNING "vcpkg toolchain script not found (was: \"${VCPKG_SCRIPT}\"), continuing")
  endif (EXISTS ${VCPKG_SCRIPT})
 endif (EXISTS ${VCPKG_INSTALLATION_ROOT})
endif (WIN32)

if (VCPKG_SUPPORT)
 option (VCPKG_USE "use vcpgk" OFF)

 if (UNIX)
  set (VCPKG_TARGET_TRIPLET "${CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE}-linux")
 elseif (WIN32)
  set (VCPKG_TARGET_TRIPLET "${CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE}-windows")
 endif ()
 message (STATUS "vcpkg triplet \"${VCPKG_TARGET_TRIPLET}\"")

 if (DEFINED ENV{VCPKG_INSTALLED_DIR})
  set (VCPKG_INSTALLED_DIR "$ENV{VCPKG_INSTALLED_DIR}")
 else ()
  set (VCPKG_INSTALLED_DIR "${VCPKG_INSTALLATION_ROOT}/installed")
 endif (DEFINED ENV{VCPKG_INSTALLED_DIR})
 message (STATUS "vcpkg installed directory \"${VCPKG_INSTALLED_DIR}\"")

 set (VCPKG_LIB_DIR_BASE ${VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET})
 set (VCPKG_INCLUDE_DIR ${VCPKG_LIB_DIR_BASE}/include)
 set (VCPKG_DEBUG_LIB_DIR ${VCPKG_LIB_DIR_BASE}/debug/lib)
 set (VCPKG_DEBUG_BIN_DIR ${VCPKG_LIB_DIR_BASE}/debug/bin)
 set (VCPKG_RELEASE_LIB_DIR ${VCPKG_LIB_DIR_BASE}/lib)
 set (VCPKG_RELEASE_BIN_DIR ${VCPKG_LIB_DIR_BASE}/bin)

 if (VCPKG_USE)
  message (STATUS "using vcpkg in ${VCPKG_INSTALLATION_ROOT}")

  set (VCPKG_VERBOSE ON)
  set (VCPKG_APPLOCAL_DEPS OFF)
  set (VCPKG_MANIFEST_MODE OFF)
#  set (VCPKG_MANIFEST_INSTALL OFF)
  set (VCPKG_PREFER_SYSTEM_LIBS ON)
#  set (VCPKG_OVERLAY_PORTS "")

  set (CMAKE_TOOLCHAIN_FILE ${VCPKG_SCRIPT})
 endif (VCPKG_USE)
endif (VCPKG_SUPPORT)
