# *NOTE*: the first entry is the default option
if (UNIX)
 set (TOOLCHAIN "gcc" CACHE STRING "use GNU compiler collection (default)")
 set (TOOLCHAIN "llvm" CACHE STRING "use LLVM")

 set_property (CACHE TOOLCHAIN PROPERTY STRINGS "gcc" "llvm")
elseif (WIN32)
 set (TOOLCHAIN "msvc" CACHE STRING "use MSVC cl.exe (default)")

 set_property (CACHE TOOLCHAIN PROPERTY STRINGS "msvc")
endif ()

if (NOT (DEFINED TOOLCHAIN_LAST))
 set (TOOLCHAIN_LAST "NotAnImplementation" CACHE STRING "last toolchain used")
 mark_as_advanced (FORCE TOOLCHAIN_LAST)
endif ()
if (NOT (${TOOLCHAIN} MATCHES ${TOOLCHAIN_LAST}))
 if (UNIX)
  unset (GCC_USE CACHE)
  unset (LLVM_USE CACHE)
 elseif (WIN32)
  unset (MSVC_USE CACHE)
 endif ()
  set (TOOLCHAIN_LAST ${TOOLCHAIN} CACHE STRING "Updating Toolchain Option" FORCE)
endif ()

if (UNIX)
 if (${TOOLCHAIN} MATCHES "gcc")
  if (NOT GCC_SUPPORT)
   message (FATAL_ERROR "GNU gcc not supported")
  endif ()
  set (GCC_USE ON CACHE STRING "use GNU gcc")
  mark_as_advanced (FORCE GCC_USE)
  add_definitions (-DGCC_USE) # *TODO*: use compiler-specifics instead
 elseif (${TOOLCHAIN} MATCHES "llvm")
  if (NOT LLVM_SUPPORT)
   message (FATAL_ERROR "llvm not supported")
  endif ()
  set (LLVM_USE ON CACHE STRING "use llvm")
  mark_as_advanced (FORCE LLVM_USE)
  add_definitions (-DLLVM_USE) # *TODO*: use compiler-specifics instead
 endif ()
elseif (WIN32)
 if (${TOOLCHAIN} MATCHES "msvc")
  if (NOT MSVC_SUPPORT)
   message (FATAL_ERROR "MSVC ${COMPILER_EXE} not supported")
  endif ()
  set (MSVC_USE ON CACHE STRING "use MSVC ${COMPILER_EXE}")
  mark_as_advanced (FORCE MSVC_USE)
  add_definitions (-DMSVC_USE) # *TODO*: use compiler-specifics instead
 endif ()
endif ()
